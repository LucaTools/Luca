name: Select Xcode
description: Composite action to select a specific Xcode version.

inputs:
  xcode-version:
    description: The version of Xcode to select
    default: ""
    required: false

runs:
  using: composite
  steps:
    - name: Set XCODE_VERSION to input value
      shell: bash
      if: ${{ inputs.xcode-version != '' }}
      run: |
        echo "XCODE_VERSION=${{ inputs.xcode-version }}" >> "$GITHUB_ENV"

    - name: Check file existence
      shell: bash
      id: check_file
      run: |
        if [ -f ".xcode-version" ]; then
          echo "xcode-version-file-exists=1" >> "$GITHUB_OUTPUT"
        else
          echo "xcode-version-file-exists=0" >> "$GITHUB_OUTPUT"
        fi

    - name: Set XCODE_VERSION to .xcode-version value
      shell: bash
      if: ${{ inputs.xcode-version == '' && steps.check_file.outputs.xcode-version-file-exists == '1' }}
      run: |
        echo "XCODE_VERSION=$(cat .xcode-version)" >> "$GITHUB_ENV"

    - name: Assert XCODE_VERSION env var is defined
      shell: bash
      if: ${{ env.XCODE_VERSION == '' }}
      run: |
        echo "Version of Xcode should be defined as input to the action, in .xcode-version or set as XCODE_VERSION env var." >&2
        exit 1

    - name: Verify Xcode presence
      shell: bash
      if: ${{ env.XCODE_VERSION != '' }}
      run: |
        DEVELOPER_DIR="/Applications/Xcode-${XCODE_VERSION}.app/Contents/Developer"
        if [ ! -d "$DEVELOPER_DIR" ]; then
          echo "Xcode $XCODE_VERSION not found at $DEVELOPER_DIR" >&2
          ls -1 /Applications | grep Xcode || true
          exit 1
        fi

    - name: Select Xcode
      shell: bash
      if: ${{ env.XCODE_VERSION != '' }}
      run: |
        sudo xcode-select -s "/Applications/Xcode-${XCODE_VERSION}.app/Contents/Developer"
        xcodebuild -version
